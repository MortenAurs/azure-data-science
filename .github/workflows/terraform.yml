name: Deploy with Terraform

on:
  workflow_call:
    inputs:
      config-path:
        required: true
        type: string

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_USE_OIDC: true

permissions:
      id-token: write
      contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: development
    name: Deploy with Terraform
    defaults:
      run:
        working-directory: ${{ inputs.config-path }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      
      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.6

      - name: Download artifact if exist
        uses: actions/download-artifact@v3
        with:
          name: terraform-plan
          
      - name: Display structure of downloaded files
        run: ls -R

      - name: Terraform fmt
        id: fmt
        run: |
          pwd
          terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: |
          pwd
          terraform init

      - name: Terraform Validate
        id: validate
        run: |
          pwd
          terraform validate -no-color

      - name: Terraform Plan

        id: plan
        run: |
          pwd
          terraform plan -no-color -out=tfplan
        continue-on-error: true

      - uses: actions/upload-artifact@v3
      with:
        name: terraform-plan
        path: tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        id: apply
        run: |
          pwd
          terraform apply -input=false
        continue-on-error: true
      
      - name: Add summary to pull request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`

            </details>

            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
